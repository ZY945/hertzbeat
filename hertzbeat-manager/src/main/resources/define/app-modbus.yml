# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The monitoring type category：service-application service monitoring db-database monitoring mid-middleware custom-custom monitoring os-operating system monitoring
category: service
# The monitoring type eg: linux windows tomcat mysql aws...
app: modbus
# The app api i18n name
name:
  zh-CN: ModBus服务器
  en-US: ModBus Server
# The description and help of this monitoring type
help:
  zh-CN: HertzBeat 对 NTP 服务的(响应时间、时间戳、时间、偏移量、延迟、版本号、模式、层级、参考ID、精度)相关指标进行监测。<br>您可以点击 “<i>新建 NTP</i>” 并进行配置，或者选择“<i>更多操作</i>”，导入已有配置。
  en-US: HertzBeat monitors the relevant metrics of NTP services, including response time, timestamp, time, offset, delay, version number, mode, hierarchy, reference ID, and accuracy. <br>You can click "<i>New NTP</i>" and configure it, or select "<i>More Action</i>" to import the existing configuration.
  zh-TW: HertzBeat 對 NTP 服務的(響應時間、時間戳、時間、偏移量、延遲、版本號、模式、層級、參考ID、精度)相關指標進行監測。<br>您可以點擊 “<i>新建 NTP</i>” 並進行配置，或者選擇“<i>更多操作</i>”，導入已有配置。
# Input params define for monitoring(render web ui by the definition)
params:
  # field-param field key
  - field: host
    # name-param field display i18n name
    name:
      zh-CN: ModBus服务Host
      en-US: ModBus Host
    # type-param field type(most mapping the html input type)
    type: host
    # required-true or false
    required: true
  # field-param field key
  - field: port
    # name-param field display i18n name
    name:
      zh-CN: 端口
      en-US: Port
    # type-param field type(most mapping the html input type)
    type: number
    # when type is number, range is required
    range: '[0,65535]'
    # required-true or false
    required: true
    # default value
    defaultValue: 502
  - field: registerAddress
    # name-param field display i18n name
    name:
      zh-CN: 寄存器地址(默认五个,超出部分需要配置yml)
      en-US: Register address (default five, more need to configure yml)
    # type-param field type(most mapping the html input type)
    type: array
    # param field input placeholder
    placeholder: 'Input RegisterAddress'
    # required-true or false
    required: true
    # hide param-true or false
#    hide: true

# collect metrics config list
metrics:
  # metrics - summary
  - name: discrete-input-1
    i18n:
      zh-CN: modBus discrete-input 统计信息
      en-US: modBus discrete-input stats
    # metrics scheduling priority(0->127)->(high->low), metrics with the same priority will be scheduled in parallel
    # priority 0's metrics is availability metrics, it will be scheduled first, only availability metrics collect success will the scheduling continue
    priority: 0
    # collect metrics content
    fields:
      # field-metric name, type-metric type(0-number,1-string), unit-metric unit('%','ms','MB'), label-whether it is a metrics label field
      - field: address-1
        type: 0
        i18n:
          zh-CN: discrete-input-1
          en-US: discrete-input-1
    # 指标别名列表，用于在查询结果中识别指标
    aliasFields:
      - responseTime
      - discrete-input-1
      # mapping and conversion expressions, use thesand aliasField above to calculate metrics value# (可选)指标映射转换计算表达式，与上面的别名一起作用，计算出最终需要的指标值# eg: cores=core1+core2, usage=usage, waitTimeallTime-runningTime
    calculates:
      - responseTime=responseTime
      - address-1=discrete-input-1
    protocol: plc
    # the config content when protocol is http
    plc:
      # host
      host: ^_^host^_^
      # port
      port: ^_^port^_^
      driverName: modbus-tcp
      addressSyntax: discrete-input
      registerAddresses: [^_^registerAddresses^_^]
